# JSON
#  4. Создать внешний репозиторий c названием JSON.
curl -u 'glugoff:TOKEN' https://api.github.com/user/repos -d '{"name":"json"}'

#  5. Клонировать репозиторий JSON на локальный компьютер.
cd /d/code
git clone https://github.com/glugoff/json

#  6. Внутри локального JSON создать файл “new.json”.
cd /json
touch new.json

#  7. Добавить файл под гит.
git add .

#  8. Закоммитить файл.
git commit -m "add file new.json"

#  9. Отправить файл на внешний GitHub репозиторий.
git push

#  10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
nano new.json
вводим:

{
"name": "Mikhail",
"age": 35,
"pet_count": 1,
"salary": 1000
}

CTRL+S CTRL+X

#  11. Отправить изменения на внешний репозиторий.
git commit -am "added content to new.json"
git push

#  12. Создать файл preferences.json
touch preferences.json

#  13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
nano preferences.json
вводим:

{
"favourite film": "the matrix",
"favorite serial": "I dont watch soap operas",
"favourite season": "autumn",
"country": "Albania"
}

CTRL+S CTRL+X

#  14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON

touch skills.json
nano skills.json

вводим:

{
"1": "Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC",
"2": "Что такое клиент серверная архитектура.",
"3": "Методы запросов на сервер.",
"4": "Ответы сервера.",
"5": "Структуры запросов и ответов.",
"6": "Что такое JSON, XML. Их структура.",
"7": "Тестирование API.",
"8": "Снятие и чтение логов.",
"9": "Postman, Fidler.",
"10": "VPN. (Как работает, зачем нужен, как использовать, варианты инструментов)",
"11": "Dev Tools веб браузеров (Google Chrome, FireFox).",
"12": "Мобильное тестирование.",
"13": "Особенность iOS, Android, гайдлайны.",
"14": "Сборка iOS приложений на XCode",
"15": "Сборка Android приложений на Android Studio",
"16": "Перехват мобильного трафика (сниффинг) через Charles",
"17": "Настройка прокси на iOS и Android.",
"18": "Командная строка (terminal) Linux Ubuntu. Копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса. ",
"19": "Простой bash скриптринг , автоматизация рутинных задач на сервере.",
"20": "Доступ к удалённым серверам.",
"21": "Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join",
"22": "Git",
"23": "Jmeter",
"24": "Методология разработки Scrum",
"25": "Python. Создание собственного клиент-серверного приложения."
}

CTRL+S CTRL+X

#  15. Отправить сразу 2 файла на внешний репозиторий.
git add {preferences.json,skills.json}
git commit -m "add files preferences and skills"
git push

#  16. На веб интерфейсе создать файл bug_report.json.
на веб-мордочке нажимаем Add file -> Create new file

#  17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Внизу пишем имя коммита, нажимаем зеленую кнопочку Commit new file, пишем имя bug_report.json

#  18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
нажимаем на файл bug_report.json, потом на кнопку edit (значок карандаша) в правом верхнем углу 
пишем:

{
"ID": "bg01",
"Title": "Товары не добавляются в корзину",
"steps to reproduction": [
"Зайти на страницу товара", 
"Ввести целое положительное значение в поле количество", 
"Нажать кнопку добавить в корзину", 
"Перейти в корзину"], 
"Ожидаемый результат": "В корзине есть товар",
"Фактический результат": "Корзина пуста"
}

#  19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Внизу вводим имя коммита, жмем commit changes

#  20. Синхронизировать внешний и локальный репозиторий JSON
git pull

------


#  XML
#  21. Создать внешний репозиторий c названием XML.
curl -u 'glugoff:TOKEN' https://api.github.com/user/repos -d '{"name":"XML"}'

#  22. Клонировать репозиторий XML на локальный компьютер.
git clone https://github.com/glugoff/XML
cd XML/

#  23. Внутри локального XML создать файл “new.xml”.
touch new.xml

#  24. Добавить файл под гит.
git add new.xml

#  25. Закоммитить файл.
$ git commit -am "create new.xml"

#  26. Отправить файл на внешний GitHub репозиторий.
git push

#  27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
nano new.xml
вводим:

<?xml version="1.0" encoding="UTF-8"?>
<new>
<name>Mikhail</name>
<age>35</age>
<pet_count>1</pet_count>
<salary>1000</salary>
</new>

#  28. Отправить изменения на внешний репозиторий.
git commit -am "changes new.xml"
git push

#  29. Создать файл preferences.xml
touch preferences.xml

#  30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
nano preferences.xml

вводим:

<?xml version="1.0" encoding="UTF-8"?>
<preferences>
<favourite_film>The Matrix</favourite_film>
<favorite_serial>I dont watch soap operas</favorite_serial>
<favourite_season>autumn</favourite_season>
<country>Albania</country>
</preferences>

#  31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
touch skills.xml
nano skills.xml
пишем:

<?xml version="1.0" encoding="UTF-8"?>
<skills>
<N2>Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC</N2>
<N3>Что такое клиент серверная архитектура.C</N3>
<N4>Методы запросов на сервер.C</N4>
<N5>Ответы сервера.C</N5>
<N6>Структуры запросов и ответов.C</N6>
<N7>Что такое JSON, XML. Их структура.C</N7>
<N8>Тестирование API.C</N8>
<N9>Снятие и чтение логов.C</N9>
<N10>Postman, Fidler.C</N10>
<N11>VPN. (Как работает, зачем нужен, как использовать, варианты инструментов)C</N11>
<N12>Dev Tools веб браузеров (Google Chrome, FireFox).C</N12>
<N13>Мобильное тестирование.C</N13>
<N14>Особенность iOS, Android, гайдлайны.C</N14>
<N15>Сборка iOS приложений на XCodeC</N15>
<N16>Сборка Android приложений на Android StudioC</N16>
<N17>Перехват мобильного трафика (сниффинг) через CharlesC</N17>
<N18>Настройка прокси на iOS и Android.C</N18>
<N19>Командная строка (terminal) Linux Ubuntu. Копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса.C</N19>
<N20>Простой bash скриптринг , автоматизация рутинных задач на сервере.C</N20>
<N21>Доступ к удалённым серверам.C</N21>
<N22>Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, JoinC</N22>
<N23>GitC</N23>
<N24>JmeterC</N24>
<N25>Python. Создание собственного клиент-серверного приложенияC</N25>
</skills>

#  32. Сделать коммит в одну строку.
git add . && git commit -am "добавили сразу два файла"

#  33. Отправить сразу 2 файла на внешний репозиторий.
git push

#  34. На веб интерфейсе создать файл bug_report.xml.
на веб-мордочке нажимаем Add file -> Create new file

#  35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Внизу пишем имя коммита, нажимаем зеленую кнопочку Commit new file, пишем имя bug_report.xml

#  36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
нажимаем на файл bug_report.json, потом на кнопку edit (значок карандаша) в правом верхнем углу 
пишем:

<?xml version="1.0" encoding="UTF-8"?>
<bug_report>
<ID>bg01</ID>
<title>Товары не добавляются в корзину</title>
<steps_to_reproduction>
<N1>Зайти на страницу товара</N1>
<N2>Ввести целое положительное значение в поле количество</N2>
<N3>Нажать кнопку добавить в корзину</N3> 
<N4>Перейти в корзину</N4>
</steps_to_reproduction>
<expected_result>В корзине есть товар</expected_result>
<actual_result>Корзина пуста</actual_result>
</bug_report>

#  37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
пишем имя коммита и нажимаем зеленую кнопочку внизу

#  38. Синхронизировать внешний и локальный репозиторий XML
cd d/code/xml
git pull
 
# TXT
#  1. Создать внешний репозиторий c названием TXT.
curl -u 'glugoff:TOKEN' https://api.github.com/user/repos -d '{"name":"TXT"}'

#  2. Клонировать репозиторий TXT на локальный компьютер.
git clone https://github.com/glugoff/TXT.git
cd TXT
git init

#  3. Внутри локального TXT создать файл “new.txt”.
touch new.txt

#  4. Добавить файл под гит.
git add new.txt

#  5. Закоммитить файл.
git commit -m "create file new.txt"

#  6. Отправить файл на внешний GitHub репозиторий.
git push

#  7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
nano new.txt
пишем:

    name: Mikhail
    age: 35
    pet_count: 1
    salary: 1000


#  8. Отправить изменения на внешний репозиторий.
git commit -am "changes in new.txt"
git push

#  9. Создать файл preferences.txt
touch preferences.txt

#  10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
nano preferences.txt
пишем:

favourite film: the matrix
favorite serial: I dont watch soap operas
favourite season: autumn
country: Albania

#  11. Создать файл skills.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
nano skills.txt
пишем:
 1: Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC,
 2: Что такое клиент серверная архитектура.,
 3: Методы запросов на сервер.,
 4: Ответы сервера.,
 5: Структуры запросов и ответов.,
 6: Что такое JSON, XML. Их структура.,
 7: Тестирование API.,
 8: Снятие и чтение логов.,
 9: Postman, Fidler.,
 10: VPN. (Как работает, зачем нужен, как использовать, варианты инструментов),
 11: Dev Tools веб браузеров (Google Chrome, FireFox).,
 12: Мобильное тестирование.,
 13: Особенность iOS, Android, гайдлайны.,
 14: Сборка iOS приложений на XCode,
 15: Сборка Android приложений на Android Studio,
 16: Перехват мобильного трафика (сниффинг) через Charles,
 17: Настройка прокси на iOS и Android.,
 18: Командная строка (terminal) Linux Ubuntu. Копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса. ,
 19: Простой bash скриптринг , автоматизация рутинных задач на сервере.,
 20: Доступ к удалённым серверам.,
 21: Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join,
 22: Git,
 23: Jmeter,
 24: Методология разработки Scrum,
 25: Python. Создание собственного клиент-серверного приложения.

#  12. Сделать коммит в одну строку.
git add . && git commit -am "create file skills.txt"

#  13. Отправить сразу 2 файла на внешний репозиторий.
git push

#  14. На веб интерфейсе создать файл bug_report.txt.
на веб-мордочке нажимаем Add file -> Create new file

#  15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Внизу пишем имя коммита, нажимаем зеленую кнопочку Commit new file, пишем имя bug_report.txt

#  16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
нажимаем на файл bug_report.json, потом на кнопку edit (значок карандаша) в правом верхнем углу 
пишем:

ID: bg01
Title: Товары не добавляются в корзину
steps to reproduction: 
Зайти на страницу товара 
Ввести целое положительное значение в поле количество 
Нажать кнопку добавить в корзину
Перейти в корзину
expected result: В корзине есть товар
actual result: Корзина пуста

#  17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
пишем имя коммита и нажимаем зеленую кнопочку внизу

#  18. Синхронизировать внешний и локальный репозиторий TXT
git pull
