-- ЭТОТ КУРС НА MYSQL!!!
--1.1.6
-- Сформулируйте SQL запрос для создания таблицы book, занесите  его в окно кода (расположено ниже)  и отправьте на проверку (кнопка Отправить). Структура таблицы book:
CREATE TABLE book (
    book_id INT PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR(50),
    author VARCHAR(30),
    price DECIMAL (8, 2),
    amount INT
    );

--1.1.7
-- Занесите новую строку в таблицу book (текстовые значения (тип VARCHAR) заключать либо в двойные, либо в одинарные кавычки):
INSERT INTO book (title, author, price, amount)
VALUES ("Мастер и Маргарита", "Булгаков М.А.", 670.99, 3)
;

-- 1.1.8
-- Занесите три последние записи в таблицуbook,  первая запись уже добавлена на предыдущем шаге:
INSERT INTO book (title, author, price, amount)
VALUES 
("Белая гвардия", "Булгаков М.А.", 540.50, 5),
("Идиот", "Достоевский Ф.М.", 460.00, 10),
("Братья Карамазовы", "Достоевский Ф.М.", 799.01, 2);
--ИЛИ
INSERT INTO book
     VALUES 
     (DEFAULT, "Белая гвардия",     "Булгаков М.А.",    540.50, 5),
     (DEFAULT, "Идиот",             "Достоевский Ф.М.", 460.00, 10),
     (DEFAULT, "Братья Карамазовы", "Достоевский Ф.М.", 799.01, 2);

-- 1.2.2
-- Вывести информацию о всех книгах, хранящихся на складе.
SELECT * 
FROM book

-- 1.2.3
-- Выбрать авторов, название книг и их цену из таблицы book.
SELECT author, title, price 
FROM book;

-- 1.2.4
-- Выбрать названия книг и авторов из таблицы book, для поля title задать имя(псевдоним) Название, для поля author –  Автор. 
SELECT 
title AS Название,
author AS Автор
FROM book;

-- 1.2.5
-- ПРИМЕР
-- Вывести всю информацию о книгах, а также для каждой позиции посчитать
-- ее стоимость (произведение цены на количество). 
-- Вычисляемому столбцу дать имя total .
SELECT title, author, price, amount, 
     price * amount AS total 
FROM book;
-- ЗАДАНИЕ
-- Для упаковки каждой книги требуется один лист бумаги, цена которого 1 рубль 65 копеек. 
-- Посчитать стоимость упаковки для каждой книги (сколько денег потребуется, чтобы
-- упаковать все экземпляры книги). 
-- В запросе вывести название книги, ее количество и стоимость упаковки, 
--последний столбец назвать pack. 
SELECT
title, amount, amount * 1.65 AS pack
FROM book

--В SQL реализовано множество  математических функций для работы с числовыми данными.
-- В таблице приведены некоторые из них.
Функция	Описание	Пример
CEILING(x)	возвращает наименьшее целое число, большее или равное x
(округляет до целого числа в большую сторону)	CEILING(4.2)=5
CEILING(-5.8)=-5

ROUND(x, k)	округляет значение x до k знаков после запятой,
если k не указано – x округляется до целого	ROUND(4.361)=4
ROUND(5.86592,1)=5.9

FLOOR(x)	возвращает наибольшее целое число, меньшее или равное x
(округляет до  целого числа в меньшую сторону)	FLOOR(4.2)=4
FLOOR(-5.8)=-6

POWER(x, y)	возведение x в степень y	POWER(3,4)=81.0

SQRT(x)	квадратный корень из x	SQRT(4)=2.0
SQRT(2)=1.41...

DEGREES(x)	конвертирует значение x из радиан в градусы	DEGREES(3) = 171.8...

RADIANS(x)	конвертирует значение x из градусов в радианы	RADIANS(180)=3.14...

ABS(x)	модуль числа x	ABS(-1) = 1

ABS(1) = 1

PI()	pi = 3.1415926...
-- 1.2.6
-- ПРИМЕР
-- Для каждой книги из таблицы book вычислим налог на добавленную стоимость (имя столбца tax)
-- , который включен в цену и составляет k = 18%,  а также цену книги (price_tax) без него. Формулы для вычисления:
SELECT title, 
    price, 
    ROUND((price*18/100)/(1+18/100),2) AS tax, 
    ROUND(price/(1+18/100),2) AS price_tax 
FROM book;

-- Задание
-- В конце года цену всех книг на складе пересчитывают – снижают ее на 30%. Написать SQL запрос, который из таблицы 
-- book выбирает названия, авторов, количества и вычисляет новые цены книг. Столбец с новой ценой назвать new_price,
--  цену округлить до 2-х знаков после запятой.
SELECT
title, author, amount, 
ROUND(price - (price*0.3),2) AS new_price
FROM book;

--1.2.7
--ПРИМЕР
-- Для каждой книги из таблицы book установим скидку следующим образом:
-- если количество книг меньше 4, то скидка будет составлять 50% от цены, в противном случае 30%.
SELECT title, amount, price, 
    ROUND(IF(amount<4, price*0.5, price*0.7),2) AS sale
FROM book;

-- Усложним вычисление скидки в зависимости от количества книг. Если количество книг меньше 4
--  – то скидка 50%, меньше 11 – 30%, в остальных случаях – 10%. И еще укажем какая именно скидка на каждую книгу.
SELECT title, amount, price,
    ROUND(IF(amount < 4, price * 0.5, IF(amount < 11, price * 0.7, price * 0.9)), 2) AS sale,
    IF(amount < 4, 'скидка 50%', IF(amount < 11, 'скидка 30%', 'скидка 10%')) AS Ваша_скидка
FROM book;

--ЗАДАНИЕ
-- При анализе продаж книг выяснилось, что наибольшей популярностью пользуются книги Михаила Булгакова, на втором месте книги Сергея Есенина. 
-- Исходя из этого решили поднять цену книг Булгакова на 10%, а цену книг Есенина - на 5%. Написать запрос, куда включить автора,
--  название книги и новую цену, последний столбец назвать new_price. Значение округлить до двух знаков после запятой.
SELECT
author, title, 
ROUND(IF(author = "Булгаков М.А.", price *1.1, IF(author = "Есенин С.А.", price * 1.05, price)), 2) AS "new_price"
FROM book;

--ИЛИ

SELECT
    author
    ,title
    ,ROUND(
            CASE author
                WHEN 'Булгаков М.А.' THEN price * 1.1
                WHEN 'Есенин С.А.'   THEN price * 1.05
                                     ELSE price
            END
          ,2) AS new_price
FROM book

-- 1.2.8
-- Задание
-- Вывести автора, название  и цены тех книг, количество которых меньше 10.
SELECT author, title, price
FROM book
WHERE amount <10

-- Выборка данных, логические операции
--  Логическое выражение после ключевого слова WHERE кроме операторов сравнения  и выражений может включать
--  логические операции (И «and», ИЛИ «or», НЕ «not») и круглые скобки, изменяющие приоритеты выполнения операций.
-- Приоритеты операций:
круглые скобки
умножение  (*),  деление (/)
сложение  (+), вычитание (-)
операторы сравнения (=, >, <, >=, <=, <>)
NOT
AND
OR

--1.2.9
--Вывести название, автора,  цену  и количество всех книг, цена которых меньше 500 или 
--больше 600, а стоимость всех экземпляров этих книг больше или равна 5000.
SELECT title, author, price, amount
FROM book
WHERE (price < 500 OR price > 600) AND amount * price > 5000;

--1.2.10
-- Задание
-- Вывести название и авторов тех книг, цены которых принадлежат интервалу
-- от 540.50 до 800 (включая границы),  а количество или 2, или 3, или 5, или 7 .

SELECT
title, author
FROM book
WHERE (price >=540.50 AND price <=800) AND (amount = 2 OR amount = 3 OR amount = 5 OR amount = 7)
--ИЛИ
SELECT title, author 
FROM book
WHERE (price BETWEEN 540.50 AND 800) and (amount IN (2, 3, 5, 7));

-- 1.2.11
-- Задание
-- Вывести  автора и название  книг, количество которых принадлежит интервалу от 2 до 14 (включая границы).
--  Информацию  отсортировать сначала по авторам (в обратном алфавитном порядке), а затем по названиям книг (по алфавиту).
SELECT
author, title
FROM book
WHERE amount BETWEEN 2 AND 14
ORDER BY author DESC, title;

--1.2.12
-- Задание
-- Вывести название и автора тех книг, название которых состоит из двух и более слов, 
-- а инициалы автора содержат букву «С». Считать, что в названии слова отделяются друг 
-- от друга пробелами и не содержат знаков препинания, между фамилией автора и инициалами
-- обязателен пробел, инициалы записываются
-- без пробела в формате: буква, точка, буква, точка.
-- Информацию отсортировать по названию книги в алфавитном порядке.
SELECT title, author
FROM book
WHERE title LIKE "_% _%" AND
author LIKE "% %С.%"
ORDER BY title 



--1.3.1
-- Задание
-- Отобрать различные (уникальные) элементы столбца amount таблицы book.
SELECT DISTINCT amount
FROM book

1.3.2